import java.util.Random;
/**This is a program that search the array linearly and find out the value that is equal to the 
 * value that user looks for and return the location of the value in the array. Once the value is found
 * in the array, the loop stops and return the variable index which hold the location. If there is no such
 * value in the array, this method will assign index as -1 and return it afterward.
 * This is the experimental test. so array with length ranges from 1 million to 10 million will be tested.
 * each array will be initialized with random numbers generated by random number generator and run for 5 times.
 * an average running time for each array length will be  printed out at the end. The worst scnerio is the value doesn't
 * contain in the array. Therefore, the random number that system generates is between 100 and 135 while the value assigned
 * for searching is 1000.
 * @author william
 *
 */

public class C10 {
	public static void main(String[] args){
		Random generator=new Random();//random number generator
		double duration=0;//initialize duration as 0.
		for(int N=1000000;N<=10000000;N+=1000000){//for loop to control the length of array from 1 million to 10 million
			int A[]=new int[N];//declare the array with length N
			for(int i=0;i<A.length;i++){//loop for generating random number and assign them in to array.
				A[i]=generator.nextInt(100)+35;//assigning the random numbers to array
			}
			for(int i=1;i<=5;i++){//loop for running method with each array length 5 times
				long start=System.currentTimeMillis();//start counting time
				LinearSearch(A,A.length,1000);// call the method
				long end=System.currentTimeMillis();//stop counting time
				duration+=end-start;//get the sum of  five running time.
			}
			duration=duration/5;//get the average running time
			System.out.printf("%.3f, "+A.length,duration);//print out the running time with each array length.
			System.out.println(" ");
		}
		System.exit(0);		
	}
	/**
	 * This is the method do the linear search and return the index value.
	 * @param A the array the used for checking
	 * @param n	the array length of A.
	 * @param q the value user looks for from array A.
	 * @return index.
	 */
	public static int  LinearSearch(int A[], int n, int q){
		int index=0;//initialize the index as 0
		while(index<n&&A[index]!=q){//once got the value from the array jump out of the loop
			index++;//increment of index
		}
		if(index==n){//if the integer doesn't exist in the array
			index= -1;//set the index as -1
		}
		return index;//return the value.
		
	}
}
